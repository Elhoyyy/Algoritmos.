
TITULO:
Algoritmos Práctica 3
AUTOR 1: Eloy Sastre Sobrino LOGIN 1: eloy.sastre
AUTOR 2: Daniel Pérez Mosquera LOGIN 2: daniel.pmosquera
GROUP: 1.1
DATE: 10/11/2022

INTRODUCCIÓN:
En esta práctica estudiaremos el tiempo de ejecución y realizaremos una comprabación empírica
de la complejidad teórica de dos algoritmos cuya función es insertar n elementos en un árbol vacío y seguidamente hacer su búsqueda.
Usando un vector inicilizado aleatoriamente para ir insertando dichos elementos en el árbol vacío.

Caracteristicas de la maquina:
Los tiempos de ejecución resultantes de los algoritmos fueron realizados en el dispositivo con las siguientes características:

-Procesador: AMD Ryzen 7 5800H with Radeon Graphics 3.20 GHz. (16 CPUS)

-Memoria RAM de 16Gb.

-Version 22.04.1 de 64 bits de Ubuntu.

-Kernel: 5.15.0-47-generic


Creamos la función test para comprobar que se crea y elimina un arbol correctamente, se insertan y buscan x elementos,
y se visualiza el arbol de manera que se aprecie cual es la raiz, el hijo izquierdo y el hijo derecho de cada nodo aunque esto
solo se puede comprobar para una inserción minúscula ya que para una inserción muy grande sería dificil de entender de esta manera.

TEST: 
Arbol vacio: ()
Altura del arbol : -1
inserto un 3
inserto un 1
inserto un 2
inserto un 5
inserto un 4
inserto un 5
Arbol:( 1 ( 2 )) 3 (( 4 ) 5 )
Altura del arbol : 2
busco 3 y encuentro 3 repetido: 1 veces
busco 1 y encuentro 1 repetido: 1 veces
busco 2 y encuentro 2 repetido: 1 veces
busco 5 y encuentro 5 repetido: 2 veces
busco 4 y encuentro 4 repetido: 1 veces
busco 6 y no encuentro nada
borro todos nodos liberando la memoria:
Arbol vacio: ()
Altura del arbol : -1


En este apartado calcularemos el tiempo de ejecución resultante de la inserción y búsqueda de n elementos en un árbol  
(haciendo dicha búsqueda en ese mismo árbol) y gracias a las tablas que proporcionamos con los distintos tiempos de ejecución 
de cada cota, realizaremos una comprobación empírica de la complejidad haciendo uso de la cota sobreestimada, ajustada y subestimada.


Los tiempos están medidos en microsegundos.


En el caso de los tiempos fueran menores de 500 microsegundos no los imprimimos debido a que el numero de elementos en estos casos, al ser 
un rango de números más pequeño, la probabilidad de que el árbol quede centrado es mucho mayor en estos casos en los cuales los rangos sean mayores
provocando  un mayor tiempo en estos últimos debido a que una rama del árbol tiende a actuar como una lista.



TABLAS DE TIEMPO:

	   n	     t_ins(n)	      t_bus(n)
        8000       	 837	         1395
       16000            2837	       	 2627
       32000       	4483      	 5936
       64000           11027	      	13072
      128000           26922	      	30593
      256000           65100	      	70457

INSERCION EN ARBOL VACIO:

	   n	        t(n)	  t(n)/f(n)	 t(n)/g(n)	t(n)/h(n)	
        8000        837.000       0.104625       0.018136       0.001170
       16000       2837.000       0.177313       0.026849       0.001402
       32000       4483.000       0.140094       0.018532       0.000783
       64000      11027.000       0.172297       0.019910       0.000681
      128000      26922.000       0.210328       0.021232       0.000588
      256000      65100.000       0.254297       0.021071       0.000503

Donde:
n es el número de interaciones que realiza el bucle. (Es en las demás funciones igual)
t(n)= es el tiempo de ejecución en microsegundos(µs) (Es en las demás funciones igual)
 Cota subestimada: f(n) = n^1.
 Cota ajustada:  g(n) = n^1.18. La cual tiene una constante que tiende a 0.019 o 0.020 incluyendo una anomalía con el valor de n=16000 ya que se produce
 un gran salto con respecto a los demás tiempos.
 Cota sobreestimada: h(n) = n^1.5.


BUSQUEDA EN ESE MISMO ARBOL:

	   n	        t(n)	  t(n)/f(n)	 t(n)/g(n)	t(n)/h(n)	
        8000       1395.000       0.174375       0.034588       0.001950
       16000       2627.000       0.164187       0.028747       0.001298
       32000       5936.000       0.185500       0.028669       0.001037
       64000      13072.000       0.204250       0.027864       0.000807
      128000      30593.000       0.239008       0.028782       0.000668
      256000      70457.000       0.275223       0.029255       0.000544
      

Donde:

 Cota subestimada: f(n) = n^1.
 Cota ajustada:  g(n) = n^1.18. La cual tiene una constante que tiende a 0.028 incluyendo una anomalía con el valor de n=8000 ya que se produce
 un gran salto con respecto a los demás tiempos.
 Cota sobreestimada: h(n) = n^1.5.
 
 
 CONCLUSIÓN:
 Por último con respecto a la explicación teórica, la empírica varía un mínimo siendo esta mayor que la teórica, tanto para el caso de inserción 
 como para el de búsqueda ya que utilizamos las mismas cotas en ambos casos. Para la inserc
 
 
