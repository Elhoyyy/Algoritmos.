
TITULO:
Algoritmos Práctica 3
AUTOR 1: Eloy Sastre Sobrino LOGIN 1: eloy.sastre
AUTOR 2: Daniel Pérez Mosquera LOGIN 2: daniel.pmosquera
GROUP: 1.1
DATE: 10/11/2022

INTRODUCCIÓN:
En esta práctica estudiaremos el tiempo de ejecución y realizaremos una comprabación empírica
de la complejidad teórica de dos algoritmos cuya función es insertar n elementos en un árbol vacío y seguidamente hacer su búsqueda.
Usando un vector inicilizado aleatoriamente para ir insertando dichos elementos en el árbol vacío.

Caracteristicas de la maquina:
Los tiempos de ejecución resultantes de los algoritmos fueron realizados en el dispositivo con las siguientes características:

-Procesador: AMD Ryzen 7 5800H with Radeon Graphics 3.20 GHz. (16 CPUS)

-Memoria RAM de 16Gb.

-Version 22.04.1 de 64 bits de Ubuntu.

-Kernel: 5.15.0-47-generic


Creamos la función test para comprobar que se crea y elimina un arbol correctamente, se insertan y buscan x elementos,
y se visualiza el arbol de manera que se aprecie cual es la raiz, el hijo izquierdo y el hijo derecho de cada nodo aunque esto
solo se puede comprobar para una inserción minúscula ya que para una inserción muy grande sería dificil de entender de esta manera.

TEST: 
Arbol vacio: ()
Altura del arbol : -1
inserto un 3
inserto un 1
inserto un 2
inserto un 5
inserto un 4
inserto un 5
Arbol:( 1 ( 2 )) 3 (( 4 ) 5 )
Altura del arbol : 2
busco 3 y encuentro 3 repetido: 1 veces
busco 1 y encuentro 1 repetido: 1 veces
busco 2 y encuentro 2 repetido: 1 veces
busco 5 y encuentro 5 repetido: 2 veces
busco 4 y encuentro 4 repetido: 1 veces
busco 6 y no encuentro nada
borro todos nodos liberando la memoria:
Arbol vacio: ()
Altura del arbol : -1


En este apartado calcularemos el tiempo de ejecución resultante de la inserción y búsqueda de n elementos en un árbol  
(haciendo dicha búsqueda en ese mismo árbol) y gracias a las tablas que proporcionamos con los distintos tiempos de ejecución 
de cada cota, realizaremos una comprobación empírica de la complejidad haciendo uso de la cota sobreestimada, ajustada y subestimada.


Los tiempos están medidos en microsegundos.


En el caso de los tiempos fueran menores de 500 microsegundos no los imprimimos debido a que el numero de elementos en estos casos, al ser 
un rango de números más pequeño, la probabilidad de que el árbol quede centrado es mucho mayor en estos casos en los cuales los rangos sean mayores
provocando  un mayor tiempo en estos últimos debido a que una rama del árbol tiende a actuar como una lista.



TABLAS DE TIEMPO:
	   n	     t_ins(n)	    t_bus(n)
	8000	        1295 	      1211
	16000	        3021 	      2803
	32000	        6078 	      5880
	64000	        13247 	      12756
	128000	        28941 	      29766
	256000	        62915 	      67156

INSERCION EN ARBOL VACIO:

	   n	        t(n)	  t(n)/f(n)	 t(n)/g(n)	t(n)/h(n)	
        8000       1295.000       0.161875       0.045999       0.001810
       16000       3021.000       0.188812       0.048692       0.001493
       32000       6078.000       0.189938       0.044452       0.001062
       64000      13247.000       0.206984       0.043961       0.000818
      128000      28941.000       0.226102       0.043581       0.000632
      256000      62915.000       0.245762       0.042989       0.000486

Donde:
n es el número de interaciones que realiza de la función.
t(n)= es el tiempo de ejecución en microsegundos(µs) (Es en las demás funciones igual)
 Cota subestimada: f(n) = n^1.
 Cota ajustada:  g(n) = n^1.14. La cual tiene una constante que tiende a 0.043 o 0.045 incluyendo una anomalía con el valor de n=16000 ya que se produce
 un gran salto con respecto a los demás tiempos.
 Cota sobreestimada: h(n) = n^1.5.


BUSQUEDA EN ESE MISMO ARBOL:

	   n	        t(n)	  t(n)/f(n)	 t(n)/g(n)	t(n)/h(n)	
        8000       1211.000       0.151375       0.043015       0.001692
       16000       2803.000       0.175187       0.045178       0.001385
       32000       5880.000       0.183750       0.043004       0.001027
       64000      12756.000       0.199313       0.042332       0.000788
      128000      29766.000       0.232547       0.044823       0.000650
      256000      66371.000       0.259262       0.045351       0.000512
      

Donde:

 Cota subestimada: f(n) = n^1.
 Cota ajustada:  g(n) = n^1.14. La cual tiene una constante que tiende a 0.043-0.045 incluyendo una anomalía con el valor de n=64000 ya que se produce
 un gran salto con respecto a los demás tiempos.
 Cota sobreestimada: h(n) = n^1.5.
 
 
 CONCLUSIÓN:
 Por último con respecto a la explicación teórica, la empírica varía un mínimo siendo esta mayor que la teórica, tanto para el caso de inserción 
 como para el de búsqueda ya que utilizamos las mismas cotas en ambos casos. El tiempo de insercion es mayor que el de busqueda pero cuanto mas tamaño
 tenga el árbol la diferencia de tiempos es menor llegando a ser mayor el tiempo de búsqueda que le de inserción.
 
 
