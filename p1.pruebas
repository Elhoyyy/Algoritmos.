 #include <stdio.h>
#include <math.h>
#include <sys/time.h>
/* obtiene la hora actual en microsegundos */
double microsegundos() {
    struct timeval t;
    if (gettimeofday(&t, NULL) < 0 )
        return 0.0;
    return (t.tv_usec + t.tv_sec * 1000000.0);
}
void test();
void print_resultf1(int n);
void print_resultf2(int n);
void print_resultf3(int n);
int main (){
    test();
    int n1=2;
    for(int i=0;i<5;i++){
        print_resultf1(n1);
        n1=n1*2;
        }
    printf("\n");
    int n2=1000;
        for(int i=0;i<5;i++){
            print_resultf2(n2);
            n2=n2*10;
        }
    printf("\n");
        int n3=1000;
    for(int i=0;i<5;i++){
        print_resultf3(n3);
        n3=n3*10;
    }
    return 0;
}
/*
leer_tiempo (ta);
repetir K veces:
alg(n);
leer_tiempo (tb)


inicializar(vector);
leer_tiempo (ta); alg(vector); leer_tiempo (tb);
t:=tb-ta;
si (t < 500) entonces { % ‘‘umbral de confianza’’
leer_tiempo (ta);
repetir K veces: {
inicializar(vector); alg(vector)
};
leer_tiempo (tb);
t1:=tb-ta; % deber´ıa estar por encima de 500!
leer_tiempo (ta);
repetir K veces: % debe ser la misma constante K
inicializar(vector);
leer_tiempo (tb);
t2:=tb-ta;
t:=(t1-t2)/K
}


int fib1(int n) {
    if (n < 2) {
        return n;
    } else {
        return (fib1(n - 1) + fib1(n - 2));
    }
}

int fib2(int n){
    int i=1, j=0;
    for(int k=1; k<n; k++){
        j=i+j;
        i=j-i;
    }
    return j;
}

int fib3(int n) {
    int i = 1, j = 0, k = 0, h = 1, t;
    while (n > 0) {
        if (n % 2 == 1) {
            t = j * h;
            j=i*h+j*k+t;
            i=i*k+t;
        }
        t=h*h;
        h = 2 * k * h + t;
        k = k*k + t;
        n = n / 2;

    }
    return j;
}
void test(){
    int n=10;
    printf("\n");
    for(int i =0;i<n;i++){
        if(i==0){
            printf("|N|\t|FIB1|\t|FIB2|\t|FIB3|\n");
        }

        printf("|%d|\t",i+1);
        printf("|%d|\t",fib1(i+1));
        printf("|%d|\t",fib2(i+2));
        printf("|%d|\n",fib3(i+1));

    }
}
void print_resultf3(int n){
double t1, t2, t, x, y, z;
t1 = microsegundos();
fib3(n);
t2 = microsegundos();
t = t2-t1;
x = t / sqrt(log(n));
y = t / log(n);
z = t / pow(n, 0.5);
printf("%12d%15.3f%15.6f%15.6f%15.6f\n", n, t, x, y, z);
}

void print_resultf2(int n){
    double t1, t2, t, x, y, z;
    t1 = microsegundos();
    fib2(n);
    t2 = microsegundos();
    t = t2-t1;
    x = t / n;
    y = t / pow(n,0.8);
    z = t / n*log(n);
    printf("%12d%15.3f%15.6f%15.6f%15.6f\n", n, t, x, y, z);
}

void print_resultf1(int n){
    double t1, t2, t, x, y, z,o;
    o=(1+sqrt(5))/2;
    t1 = microsegundos();
    fib1(n);
    t2 = microsegundos();
    t = t2-t1;
    x = t / o;
    y = t / pow(1.1,n);
    z = t / pow(2,n);
    printf("%12d%15.3f%15.6f%15.6f%15.6f\n", n, t, x, y, z);
}
*7
